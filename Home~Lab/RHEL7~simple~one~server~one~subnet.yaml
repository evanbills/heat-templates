heat_template_version: 2013-05-23
description: >
  A simple Heat template that spins up multiple instances and a private network (HOT template in YAML).
  The spawned instances will take a login from user 'ec2-user' and requires a key pair to be setup previously.

#these will vary per environment 
parameters:
  public_net_id:
    type: string
    description: ID of the external network; ***PLEASE NOTE*** this will need to be changed for the specific environment.
    default: 6ccedfd0-cf0e-445b-9bea-c514ac3d0b43
  image: 
    type: string
    default: rhel_7.1
    description: RHEL 7 Test Image
  key_name: 
    type: string
    default: evan-pub-key
    description: SSH key to connect to the servers
  flavor: 
    type: string
    default: m1.medium
    description: flavor used by the servers



resources:

#setup all the networks
  private-net-01:
    type: OS::Neutron::Net
    properties:
      admin_state_up: true
      name: private-net-01

#subnet definitions
  heat_subnet_01:
    type: OS::Neutron::Subnet
    properties:
      name: heat-subnet-01
      cidr: 10.10.10.0/24
      dns_nameservers: [8.8.8.8, 8.8.4.4]
      enable_dhcp: true
      gateway_ip: 10.10.10.1
      network_id: { get_resource: private-net-01 }


#setup the router
  heat_router_01:
    type: OS::Neutron::Router
    properties:
      admin_state_up: true
      name: heat-router-01
  heat_router_01_gw:
    type: OS::Neutron::RouterGateway
    properties:
      network_id: { get_param: public_net_id }
      router_id: { get_resource: heat_router_01 }
  heat_router_int1:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: heat_router_01 }
      subnet_id: { get_resource: heat_subnet_01 }


#setup the ports for the instances

  instance1_port0:
    type: OS::Neutron::Port
    properties:
      admin_state_up: true
      network_id: { get_resource: private-net-01 }
      security_groups: 
       - default


#setup the instances
  instance0:
    type: OS::Nova::Server
    properties:
      name: web-server-01
      image: {get_param: image}
      flavor: {get_param: flavor}
      key_name: {get_param: key_name}
      networks:
        - port: { get_resource: instance1_port0 }



#assign public IPs to the instances
  instance0_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: instance1_port0 }



