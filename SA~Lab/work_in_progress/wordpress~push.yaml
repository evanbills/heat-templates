heat_template_version: 2013-05-23
description: >
  A simple Heat template that spins up multiple instances and a private network (HOT template in YAML).
  The spawned instances will take a login from user 'ec2-user' and requires a key pair to be setup previously.
parameters:
  public_net_id:
    type: string
    description: ID of the external network; specific to the SA Lab network.
    default: d309aab8-c571-4cc9-b11d-47da4766301b

resources:

#setup all the networks
  private-net-01:
    type: OS::Neutron::Net
    properties:
      admin_state_up: true
      name: private-net-01

#subnet definitions
  heat_subnet_01:
    type: OS::Neutron::Subnet
    properties:
      name: heat-subnet-01
      cidr: 192.168.1.0/24
      dns_nameservers: [8.8.8.8, 8.8.4.4]
      enable_dhcp: true
      gateway_ip: 192.168.1.1
      network_id: { get_resource: private-net-01 }


#setup the router
  heat_router_01:
    type: OS::Neutron::Router
    properties:
      admin_state_up: true
      name: heat-router-01
  heat_router_01_gw:
    type: OS::Neutron::RouterGateway
    properties:
      network_id: { get_param: public_net_id }
      router_id: { get_resource: heat_router_01 }
  heat_router_int1:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: heat_router_01 }
      subnet_id: { get_resource: heat_subnet_01 }


#setup the ports for the instances

  instance1_port0:
    type: OS::Neutron::Port
    properties:
      admin_state_up: true
      network_id: { get_resource: private-net-01 }
      security_groups: 
       - default

  instance2_port0:
    type: OS::Neutron::Port
    properties:
      admin_state_up: true
      network_id: { get_resource: private-net-01 }
      security_groups: 
       - default

  instance3_port0:
    type: OS::Neutron::Port
    properties:
      admin_state_up: true
      network_id: { get_resource: private-net-01 }
      security_groups: 
       - default


#setup the instances
  instance0:
    type: OS::Nova::Server
    properties:
      name: web-server-01
      #image: 754d09ef-2c5c-409c-a8d7-62e4e6ac35fc
      image: 850ab3e5-42a5-4fd4-b886-ed9c44b5afd3
      flavor: m1.small
      key_name: evan-cloud-key
      networks:
        - port: { get_resource: instance1_port0 }
      user_data:
        # str_replace:
        #   template: |
            #!/bin/bash -v
            yum -y install httpd wordpress
            systemctl enable httpd.service
            systemctl start httpd.service
            setsebool -P httpd_can_network_connect_db=1

            sed -i "/Deny from All/d" /etc/httpd/conf.d/wordpress.conf
            sed -i "s/Require local/Require all granted/" /etc/httpd/conf.d/wordpress.conf
            sed -i s/database_name_here/$db_name/ /etc/wordpress/wp-config.php
            sed -i s/username_here/$db_user/ /etc/wordpress/wp-config.php
            sed -i s/password_here/$db_password/ /etc/wordpress/wp-config.php
            sed -i s/localhost/$db_host/ /etc/wordpress/wp-config.php

            systemctl restart httpd.service

  # instance1:
  #   type: OS::Nova::Server
  #   properties:
  #     name: web-server-02
  #     image: 754d09ef-2c5c-409c-a8d7-62e4e6ac35fc
  #     flavor: m1.small
  #     key_name: evan-cloud-key
  #     networks:
  #       - port: { get_resource: instance2_port0 }

  # instance2:
  #   type: OS::Nova::Server
  #   properties:
  #     name: web-server-03
  #     image: 754d09ef-2c5c-409c-a8d7-62e4e6ac35fc
  #     flavor: m1.small
  #     key_name: evan-cloud-key
  #     networks:
  #       - port: { get_resource: instance3_port0 }


#assign public IPs to the instances
  instance0_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: instance1_port0 }

  # instance1_floating_ip:
  #   type: OS::Neutron::FloatingIP
  #   properties:
  #     floating_network_id: { get_param: public_net_id }
  #     port_id: { get_resource: instance2_port0 }

  # instance2_floating_ip:
  #   type: OS::Neutron::FloatingIP
  #   properties:
  #     floating_network_id: { get_param: public_net_id }
  #     port_id: { get_resource: instance3_port0 }
